{% extends 'baseuser.html.twig' %}

{% block title %}Reclamations{% endblock %}
{% block active4 %}class="active"{% endblock %}

{% block body %}
    <h1>My reclamations</h1>
    <a href="{{ path('app_reclamations_new') }}" class="btn btn-lg btn-primary m-2">Create new reclamation</a>
    <!--<div class="row" style="display:flex; justify-content:space-between;" >
     
    <div>
        <h3>Filtrer par statut :</h3>
        <button onclick="filterByStatus('all')">Tous</button>
        {% for status in statuses %}
            <button onclick="filterByStatus('{{ status.status }}')">{{ status.status }}</button>
        {% endfor %}
    </div>
          
    <div>
        <h3>Filtrer par sujet :</h3>
        {% for sujet in sujets %}
            <button onclick="filterBySubject('{{ sujet.sujet }}')">{{ sujet.sujet }}</button>
        {% endfor %}
    </div>

    
    <div>
        <h3>Trier par date de création :</h3>
        <button onclick="sortByCreationDate('asc')">Plus ancien en premier</button>
        <button onclick="sortByCreationDate('desc')">Plus récent en premier</button>
    </div>
    </div>-->

   
    <div class="row1">
                <div class="cards-header">
                    <p class="header-text">Message</p>
                    <p class="header-text">Date de Création</p>
                    <p class="header-text">Statut</p>
                    <p class="header-text">Action</p>
                </div>
        {% for reclamation in reclamations %}
        {% if reclamation.idUser.id == "13" %} {#session.udiser.id#}
            <div class="card">
                <div class="card-body">
              <span class="card-text container">
                <p class="card-text">{{ reclamation.sujet }}</p>
                <p class="card-text message">{{ reclamation.message }}</p>
                <a href="{{ path('app_reclamations_show', {'id': reclamation.id}) }}" class="show-more">Show more</a>
            </span>
                    <p class="card-text">{{ reclamation.dateCreation }}</p>
                    <p class="card-text">{{ reclamation.status }}</p>
                         <div class="card-text">
                    <a class="btn btn-light rounded-pill m-2" href="{{ path('app_reclamations_edit', {'id': reclamation.id}) }}" >Edit</a>
                    <div>{{ include('reclamations/_delete_form.html.twig') }}</div>
                    </div>
                </div>
            </div>
            {% endif %}
        {% else %}
            <div class="col">
                <p>No reclamations found</p>
            </div>
            
        {% endfor %}
    </div>
    <style>

    .row1{
        display:flex;
        flex-direction:column;
        width:95.5%;
        margin:1.5%;
        color:#ffffff;
    }
    .cards-header{
        display:flex;
        flex-direction:row;
        justify-content:space-between;
        margin-left:10px;
    }
    .header-text{
        position:relative;
        width:10em;
        color:#797979;
        text-decoration-line: underline;
        min-width:15em;
        max-width:15em;
        margin-right : 10px;
    }
  
    .card{
        background-color: #323232;
        border-radius:20px;
        margin-bottom:10px;
    }
    .card-body {
        display:flex;
        flex-direction:row;
        justify-content:space-around;
        width:100%; 

    }
    .card-text{
        position:relative;
        min-width:15em;
        max-width:15em;
        display:flex;
        flex-direction:row;
        align-items:center;
        margin-right : 10px;
        margin-left: 10px;

    }
    .container{
      display:flex;
        flex-direction:column;
    }
    .message {
        max-height: 50px; /* ajustez la hauteur maximale selon vos besoins */
        overflow: hidden;
        margin: 0;
    }
    .show-more{
        position: absolute;
        bottom:-1em;
        right:1em;
        color:#797979;
        text-decoration-line: underline;
        font-size:15px;
        cursor: pointer;
       
    }
    .new{
        float:right;
    }
   
</style>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const messages = document.querySelectorAll('.message');
        messages.forEach(message => {
            if (message.scrollHeight > message.clientHeight) {
               // const showMoreBtn = message.nextElementSibling;
                //showMoreBtn.style.display = 'inline'; // Afficher le bouton "See more" si le message est tronqué
                const content = message.textContent;
                message.textContent = content.substring(0, 50) + '...';
            }
        });
    });

    // Fonction de filtrage par sujet
  
function filterBySubject(subject) {
        const cards = document.querySelectorAll('.card');
        cards.forEach(card => {
            const subjectElement = card.querySelector('.subject');
            if (subjectElement.textContent === subject) {
                card.style.display = 'block';
            } else {
                card.style.display = 'none';
            }
        });
    }
    // Fonction de tri par date de création
function sortByCreationDate(order) {
        // Sélectionnez toutes les réclamations
        var reclamations = document.querySelectorAll('.card');

        // Convertissez les réclamations en un tableau pour pouvoir les trier
        var reclamationsArray = Array.from(reclamations);

        // Triez les réclamations en fonction de la date de création
        reclamationsArray.sort(function(a, b) {
            // Récupérez les dates de création des réclamations
            var dateA = new Date(a.querySelector('.date').textContent.trim());
            var dateB = new Date(b.querySelector('.date').textContent.trim());

            // Déterminez l'ordre de tri en fonction du paramètre order
            if (order === 'asc') {
                return dateA - dateB;
            } else {
                return dateB - dateA;
            }
        });

        // Mettez à jour l'affichage des réclamations dans le DOM
        reclamationsArray.forEach(function(reclamation) {
            reclamation.parentNode.appendChild(reclamation);
        });
    }

    // Fonction de filtrage par statut
function filterByStatus(status) {
        // Sélectionnez toutes les réclamations
        var reclamations = document.querySelectorAll('.card');

        // Parcourez chaque réclamation
        reclamations.forEach(function(reclamation) {
            // Récupérez le statut de la réclamation
            var reclamationStatus = reclamation.querySelector('.status').textContent.trim();

            // Vérifiez si le statut de la réclamation correspond au statut sélectionné
            if (status === 'all' || reclamationStatus === status) {
                // Affichez la réclamation si elle correspond au statut sélectionné ou si le statut est "tous"
                reclamation.style.display = 'block';
            } else {
                // Masquez la réclamation si elle ne correspond pas au statut sélectionné
                reclamation.style.display = 'none';
            }
        });
    }

</script>
{% endblock %}

